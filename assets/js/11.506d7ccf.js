(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{564:function(t,a,s){"use strict";s.r(a);var e=s(17),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"loop-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loop-methods"}},[t._v("#")]),t._v(" Loop Methods")]),t._v(" "),s("h3",{attrs:{id:"for-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-loop"}},[t._v("#")]),t._v(" for loop")]),t._v(" "),s("h4",{attrs:{id:"example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//expect: "012345678"')]),t._v("\n")])])]),s("h4",{attrs:{id:"syntax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax:")]),t._v(" "),s("p",[s("code",[t._v("for([initialization]; [condition]; [final-expression]) statement")])]),t._v(" "),s("p",[t._v("All 3 components can take an expression as value.")]),t._v(" "),s("p",[s("strong",[t._v("Note:")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("For initialization, the value can be a variable declaration. If the variable is declared using "),s("code",[t._v("var")]),t._v(", it is in the same scope as the loop is in. If the variable is declared using "),s("code",[t._v("let")]),t._v(" , it is local to the loop statement.")])]),t._v(" "),s("li",[s("p",[t._v("All 3 components are optional.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("When statement is empty, a semicolon "),s("code",[t._v(";")]),t._v(" is required at its place.")]),t._v(" Otherwise, all commands after the cycle declaration will be considered as the loop statement")])])]),t._v(" "),s("h3",{attrs:{id:"for-in"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-in"}},[t._v("#")]),t._v(" for ... in")]),t._v(" "),s("p",[t._v("Mainly used to iterate over "),s("strong",[t._v("enumarable properties")]),t._v(" of an object that are keyed by strings, including inherited enumerable properties")]),t._v(" "),s("h4",{attrs:{id:"syntax-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#syntax-2"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),s("p",[s("code",[t._v("for (let property in object) statement")])]),t._v(" "),s("p",[s("code",[t._v("property")]),t._v(" will evaluate to the "),s("strong",[t._v("key")]),t._v(" of the current property")]),t._v(" "),s("h5",{attrs:{id:"note"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#note"}},[t._v("#")]),t._v(" Note:")]),t._v(" "),s("p",[s("code",[t._v("for ... in")]),t._v(" should not be used to iterate over an array if the order of access is important")]),t._v(" "),s("p",[s("strong",[t._v("as")]),t._v(":")]),t._v(" "),s("ol",[s("li",[t._v("It will return all enumerable properties, including non-integer names and inherited properties, which may be things you don't want for iterating over an array")]),t._v(" "),s("li",[t._v("It may not access the array indexes in numerical order")])]),t._v(" "),s("p",[t._v("To iterate only own properties:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" prop "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// statements")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"for-of"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-of"}},[t._v("#")]),t._v(" for ... of")])])}),[],!1,null,null,null);a.default=n.exports}}]);